name: End-to-end tests

on: [pull_request]

jobs:
  cypress-run:
    runs-on: ubuntu-latest

    env:
      CYPRESS_ROOT_URL: http://localhost:5678
      CI: true
      CONFIRM_DROP: 1
      NODE_ENV: test
      ENABLE_CYPRESS_COMMANDS: 1

    strategy:
      matrix:
        node-version: [14.x]

    services:
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
          - 6379:6379
      postgres:
        image: postgres:11
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - "0.0.0.0:5432:5432"
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install pg_dump
        run: sudo apt-get install postgresql-client-11

      - name: Setup
        run: |
          cp .env.ci .env
          yarn --frozen-lockfile
          yarn setup
          yarn build

      - name: Start server in background
        run: yarn server start &

      - name: Start worker in background
        run: yarn worker start &

      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          wait-on: http://localhost:5678
          working-directory: "@app/e2e"
        env:
          DEBUG: "cypress:*"

      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: cypress-screenshots
          path: "@app/e2e/cypress/screenshots"

      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: cypress-videos
          path: "@app/e2e/cypress/videos"
